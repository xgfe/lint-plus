#!/usr/bin/env node

if(process.argv[2]&&process.argv[2]==='-v'||process.argv[2]==='-V'){
    console.log(require('../package.json').version);
    return;
}

var path = require('path'),
    fs = require('fs');
require('colors');

var HTML_FlAG = 'html',
    CSS_FlAG = 'css',
    JS_FlAG = 'js';

var xgconfigPath = path.resolve(process.cwd(), '.xgconfig'),
    xgconfig = {};

if (fs.existsSync(xgconfigPath)) {
    try{
       xgconfig = JSON.parse(fs.readFileSync(xgconfigPath));
    }catch(e){}
}

/**
 * 获取html，css，js特定的参数配置
 * @returns {{}}
 */
function getArgvs(){
    var argvs = process.argv.slice(2).join(' ').split(new RegExp('('+HTML_FlAG+':|'+CSS_FlAG+':|'+JS_FlAG+':)')) || [];
    var result = {},pos;
    result[HTML_FlAG] = '';
    result[CSS_FlAG] = '';
    result[JS_FlAG] = '';
    pos = argvs.indexOf(HTML_FlAG+':');
    result[HTML_FlAG] = pos === -1?'':argvs[pos+1].trim();
    pos = argvs.indexOf(CSS_FlAG+':');
    result[CSS_FlAG] = pos === -1?'':argvs[pos+1].trim();
    pos = argvs.indexOf(JS_FlAG+':');
    result[JS_FlAG] = pos === -1?'':argvs[pos+1].trim();
    return result;
}
/**
 * 获取全局的参数，如文件路径等
 */
function getGlobalArgvs(){
    var argvs = process.argv.slice(2).join(' ');
    var html_pos = argvs.indexOf(HTML_FlAG+':') ===-1?argvs.length: argvs.indexOf(HTML_FlAG+':');
    var css_pos = argvs.indexOf(CSS_FlAG+':') ===-1?argvs.length: argvs.indexOf(CSS_FlAG+':');
    var js_pos = argvs.indexOf(JS_FlAG+':') ===-1?argvs.length: argvs.indexOf(JS_FlAG+':');
    var result = argvs.slice(0,Math.min(html_pos,css_pos,js_pos)).trim();
    if(result){
        return result.split(' ');
    }
    return null;
}
var reporter = {};
var result = require('../').lint(getGlobalArgvs(),xgconfig,getArgvs(),reporter);
if(reporter.html){
    console.log('HTMLHint:\n'.red+reporter.html);
}
if(reporter.js){
    console.log('ESLint:'.green+reporter.js);
}
process.exit(result);